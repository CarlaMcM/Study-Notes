Git is a version control system. It helps you control the different versions of the files in your project.

The collection of all the old versions of your project's files is known as a Git repository. It's basically just a folder in which you can edit your files, then run Git commands to store your changes.

Each time you complete a change to some or all of your project's files, you can take a snapshot of their current contents. These snapshots are known as commits.

Git command line options consist of either a single dash followed by a single letter, or a double-dash [type --] followed by a word.

git --help will print out some help on using the Git program.

Common Git subcommands

  -The git clone and git init commands are used to set up new repositories.

  -The git add, git status, and git commit commands are the most frequently used subcommands in all of Git. They're used when committing new versions of files.

  -The git log command is also important; it lets you view a list of your old commits.

  -The git mv and git rm commands move and remove files that are being tracked by Git. We'll learn about those in Stage 2 of this course.

  -The git push and git pull commands are used to synchronize commits with Git repositories on other computers. 

  -We can find out what state our project files are in, using the git status command.

Commits

  -
